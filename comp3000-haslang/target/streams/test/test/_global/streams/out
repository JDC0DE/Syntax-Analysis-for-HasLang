[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(haslang.SyntaxAnalysisTests, org.scalatest.tools.Framework$$anon$1@4b77bcb0, false, [SuiteSelector])[0m
[0m[[0m[0minfo[0m] [0m[0m[32mSyntaxAnalysisTests in library/src/test/scala/haslang:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- equal expression[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- less than expression[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- addition expression[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- subtraction expression[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- multiplication expression[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- division expression[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- integer expression[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- true expression[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- false expression[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- identifier expression[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- parenthesized expression[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- application expression 1[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- expression containing an application expression[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- if expression[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- lambda expression[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- basic type[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- parsing unit type[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- parsing list type[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- parsing tuple type[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- parsing function type[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- parsing bracketted function type[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- empty list[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- cons expression[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- list expression[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- tuple expression[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- underscore pattern[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- literal pattern[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- list pattern[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- cons pattern[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- tuple pattern[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- simple function line[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- more complicated function line[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- simple variable[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- function with two lines[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- function with three lines[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- one definition[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- one definition with lambda[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- two definitions[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- let with one definition[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- let with two definitions[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- program with two definitions including lambda[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- program with definitions including lambda and multiline fun[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- Precedence and Associativity Test #1[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- Precedence and Associativity Test #2[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- Precedence and Associativity Test #3 - should ignore 3[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- Precedence and Associativity Test #4[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- Precedence and Associativity Test #5[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- Precedence and Associtivity Test #6 - / right Associativity[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- Precedence and Associtivity Test #7 - - right Associativity[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- Precedence and Associtivity Test #8 - * Left Associativity[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- Precedence and Associtivity Test #9 - + Left Associativity[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- Precedence and Associtivity Test #10 - : Right Associativity[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- Precedence and Associtivity Test #11 - AppExp Left Associativity[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- Precedence and Associtivity Test #12 - If and LambdaExp Left Associativity[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- Precedence and Associtivity Test #13 - ListExp Left Associativity[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- Precedence and Associtivity Test #14 - TupleExp Left Associativity[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- Precedence and Associtivity Test #15 - LetExp Left Associativity[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- Testing ListType With Set of Empty () #1[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- Strenuous Testing of TupleType #2[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- Testing IntType #3[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- Multi Bracketted FunType #4[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- Multi FunType #5[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- Empty List Pat [] #1[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- True pat #2[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- False pat #3[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- Testing ListPat #4[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- Testing TuplePat #5[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- Testing ConsPat #6[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- Testing ConsPat #7[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- sum FunLine Testing #1[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- Multi FunLine Testing #2[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- Multi Definitions Testing #3[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mRun completed in 1 second, 345 milliseconds.[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTotal number of tests run: 72[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mSuites: completed 1, aborted 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTests: succeeded 72, failed 0, canceled 0, ignored 0, pending 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mAll tests passed.[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mPassed tests:[0m
[0m[[0m[0mdebug[0m] [0m[0m	haslang.SyntaxAnalysisTests[0m
